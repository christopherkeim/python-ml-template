[tool.poetry]
name = "python-ml-template"
version = "0.1.0"
description = ""
authors = ["Christopher Keim"]
readme = "README.md"
packages = [
   { include = "src" },
   { include = "api" },
]

[tool.poetry.dependencies]
python = ">=3.10, <3.11"

# DevOps
click = "^8.1.8"

# Web
httpx = "^0.28.1"
pydantic = "^2.3.0"
fastapi = "^0.115.6"
uvicorn = "^0.34.0"

# Data Science
pandas = "^2.2.3"
numpy = "^2.2.1"
scikit-learn = "^1.6.0"
matplotlib = "^3.10.0"
seaborn = "^0.13.2"
jupyter = "^1.1.1"

# MLOps
wandb = "^0.15.10"


[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]

# DevOps
black = "^22.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.0.285"


# PostgresSQL psycopg2 pre-compiled binary
psycopg2-binary = "^2.9.9"


[tool.poetry.group.prod]
optional = true
[tool.poetry.group.prod.dependencies]

# PostgresSQL psycopg2 source build 
psycopg2 = "^2.9.9"


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "tests",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.9
target-version = "py39"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pytest.ini_options]
# Configurations for pytest with coverage
addopts = "-vv --cov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
